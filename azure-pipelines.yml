# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- feature/*
- PR

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  coverageOutputDir: '$(Build.SourcesDirectory)/TestResults/Coverage/'
  coverageReportDir: '$(Build.ArtifactStagingDirectory)/TestResults/Reports/'
  disable.coverage.autogenerate: 'true'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build solution - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests - $(buildConfiguration)'
  inputs:
    command: 'test'
    arguments: '--no-build --configuration $(buildConfiguration) -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:CoverletOutput="$(coverageOutputDir)"'
    publishTestResults: true
    projects: '**/*.Tests.csproj'

- task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
  displayName: 'Generate Code Coverage Report'
  inputs:
    reports: '$(coverageOutputDir)coverage.cobertura.xml'
    targetdir: '$(coverageReportDir)'
    reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  inputs:
    codeCoverageTool: cobertura
    reportDirectory: '$(coverageReportDir)'
    summaryFileLocation: '$(coverageReportDir)Cobertura.xml'